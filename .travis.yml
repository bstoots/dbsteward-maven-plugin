language: java

jdk:
  - openjdk7
#  - oraclejdk7

env:
  # global env vars are injected into the environment of all build configs
  global:
    - TRAVIS_MYSQL5_DBHOST=127.0.0.1
    - TRAVIS_MYSQL5_DBPORT=3306
    - TRAVIS_MYSQL5_DBUSER=travis
    - TRAVIS_MYSQL5_DBPASS=
    - TRAVIS_MYSQL5_DBNAME_MGMT=mysql
    - TRAVIS_MYSQL5_DBUSER_MGMT=root
    - TRAVIS_MYSQL5_DBPASS_MGMT=
    - TRAVIS_PGSQL8_DBHOST=127.0.0.1
    - TRAVIS_PGSQL8_DBPORT=5432
    - TRAVIS_PGSQL8_DBUSER=deployment
    - TRAVIS_PGSQL8_DBPASS=password1
    - TRAVIS_PGSQL8_DBNAME_MGMT=postgres
    - TRAVIS_PGSQL8_DBUSER_MGMT=postgres
    - TRAVIS_PGSQL8_DBPASS_MGMT=
      # use the git branch or composer package specified
    - DBSTEWARD_PACKAGING=composer
    - DBSTEWARD_GIT_BRANCH=master
    - DBSTEWARD_COMPOSER_VERSION=dev-master

  # matrix env vars generate a new build config per set
  # we need to run the two test groups separately due to active_sql_format_autoloader
  matrix:
    - DBSTEWARD_SQLFORMAT=pgsql8
#    - DBSTEWARD_SQLFORMAT=mysql5

before_install:
  - sudo apt-get update

install:
  - pwd
  - sudo apt-get install php5
  - sudo apt-get install php5-curl
  - sudo apt-get install php5-pgsql
  - sudo apt-get install php5-mysql
  - sudo apt-get install postgresql-9.3-postgis-2.1
  - sudo apt-get install postgresql-9.3-slony1-2
  - curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
  - dpkg -l
  - php --version
  - composer --version
  # plugin release branches install the corresponding dbsteward composer package
  # dev topic / master branches check out dbsteward git repo directly
  - if [[ "$DBSTEWARD_PACKAGING" == "composer" ]]; then composer -version ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "composer" ]]; then composer global require nkiraly/dbsteward:$DBSTEWARD_COMPOSER_VERSION ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "composer" ]]; then export PATH=$PATH:~/.composer/vendor/bin ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "composer" ]]; then which dbsteward ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "composer" ]]; then dbsteward ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "git" ]]; then git clone --depth=50 --branch=$DBSTEWARD_GIT_BRANCH git://github.com/nkiraly/DBSteward.git /home/travis/build/nkiraly/DBSteward ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "git" ]]; then cd /home/travis/build/nkiraly/DBSteward && composer install --dev --no-interaction ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "git" ]]; then export DBSTEWARD_BINARY_LOCATION=/home/travis/build/nkiraly/DBSteward/bin/dbsteward ; fi
  #- if [[ "$DBSTEWARD_PACKAGING" == "git" ]]; then find /home/travis/build/nkiraly/* ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "git" ]]; then /home/travis/build/nkiraly/DBSteward/bin/dbsteward ; fi
  - if [[ "$DBSTEWARD_PACKAGING" == "git" ]]; then cd /home/travis/build ; fi


before_script:
  - mvn clean install
  - if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then psql -U postgres -d postgres -c "CREATE USER dbsteward_ci WITH SUPERUSER CREATEDB CREATEROLE PASSWORD 'password1';" ; fi
  - if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then PGPASSWORD=password1 psql -U dbsteward_ci -d postgres -c "CREATE DATABASE someapp TEMPLATE template0 ENCODING 'UTF8';" ; fi
  #- if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then PGPASSWORD=password1 psql -U dbsteward_ci -d postgres -l ; fi
  #- if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then PGPASSWORD=password1 psql -U dbsteward_ci -d someapp -c "SELECT * FROM pg_language;" ; fi
  - if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then PGPASSWORD=password1 psql -U dbsteward_ci -d someapp -c "CREATE ROLE someapp WITH LOGIN;" ; fi
  - if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then PGPASSWORD=password1 psql -U dbsteward_ci -d someapp -c "CREATE ROLE someapp_readonly;" ; fi
  - if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then PGPASSWORD=password1 psql -U dbsteward_ci -d someapp -c "CREATE ROLE someapp_dba;" ; fi
  - if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then PGPASSWORD=password1 psql -U dbsteward_ci -d someapp -c "CREATE ROLE someapp_slony WITH LOGIN SUPERUSER PASSWORD 'drowssapynols1';" ; fi
  #- if [[ "$DBSTEWARD_SQLFORMAT" == "pgsql8" ]]; then PGPASSWORD=password1 psql -U dbsteward_ci -d postgres -c "DROP DATABASE someapp;" ; fi


# by default, travis runs "mvn test", but we want to make sure that after installing the plugin, the examples work
script: ./script/ci/run_examples.sh
